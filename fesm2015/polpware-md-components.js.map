{"version":3,"file":"polpware-md-components.js.map","sources":["ng://@polpware/md-components/lib/adaptors/cdk-collection-data-source-adaptor.ts","ng://@polpware/md-components/lib/indicator/modal.component.ts","ng://@polpware/md-components/lib/services/spinner-service.impl.ts","ng://@polpware/md-components/lib/email-form/email-form-abstract.component.ts","ng://@polpware/md-components/lib/email-form/email-form.component.ts","ng://@polpware/md-components/lib/md-components.module.ts"],"sourcesContent":["import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject ,  Observable } from 'rxjs';\n\ninterface Database<T> {\n    dataChange: BehaviorSubject<Array<T>>\n}\n\nexport class TableDataSourceAdaptor<T> extends DataSource<T> {\n\n    protected readonly _filterChange: BehaviorSubject<string>;\n\n    constructor(protected readonly _database: Database<T>) {\n        super();\n        this._filterChange = new BehaviorSubject('');\n    }\n\n    get filter(): string { return this._filterChange.value; }\n    set filter(filter: string) { this._filterChange.next(filter); }\n\n    connect(): Observable<Array<T>> {\n        return this._database.dataChange.asObservable();\n    }\n\n    disconnect(): void {\n    }\n}\n\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n    selector: 'polp-md-indicator-modal',\r\n    templateUrl: 'modal.component.html'\r\n})\r\nexport class PolpMdIndicatorModal {\r\n\r\n    public title: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<PolpMdIndicatorModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.title = data.title || '';\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport {\n    ISpinnerService\n} from '@polpware/ngx-spinner';\n\nimport { PolpMdIndicatorModal as IndicatorModal } from '../indicator/modal.component';\n\nconst DismissingDelayPeroid = 300;\nconst DefaultShowingDelayPeroid = 500;\n\n@Injectable()\nexport class PolpMdSpinnerServiceImpl implements ISpinnerService {\n\n    private _diaglogRef: MatDialogRef<IndicatorModal>;\n\n    private _showingTimer: any;\n    private _showingDelay: number;\n    private _dismissingTimer: any;\n\n    private _counter: number;\n\n    constructor(private _dialog: MatDialog) {\n        this._showingTimer = null;\n        this._showingDelay = DefaultShowingDelayPeroid;\n        this._dismissingTimer = null;\n        this._diaglogRef = null;\n        this._counter = 0;\n    }\n\n    public setDelay(seconds: number) {\n        this._showingDelay = seconds * 1000;\n    }\n\n    // Override\n    public show(title: string = 'Loading ...') {\n\n        this._counter++;\n\n        // If there is one already, use it.\n        if (this._diaglogRef) {\n\n            // However, we need to cancel the dismiss timer.\n            // It is safe, because we expect that \"hide\" is to be called\n            // sometime later from this moment on.\n            if (this._dismissingTimer) {\n                clearTimeout(this._dismissingTimer);\n                this._dismissingTimer = 0;\n            }\n\n            return;\n        }\n\n        // If we have already scheduled to dismiss the spinner,\n        // we just need to clear the scheduler.\n        // Please refer to the above for the reason.\n        if (this._dismissingTimer) {\n            clearTimeout(this._dismissingTimer);\n            this._dismissingTimer = 0;\n            return;\n        }\n\n        // If we have already scheduled to show the spinner, we just\n        // use this schedule. \n        if (this._showingTimer) {\n            return;\n        }\n\n        // Otherwise, schdule to show the spinner.\n        this._showingTimer = setTimeout(() => {\n            // Clean up the timer\n            this._showingTimer = null;\n\n            this._diaglogRef = this._dialog.open(IndicatorModal, {\n                width: '250px',\n                data: {\n                    title: title\n                }\n            });\n\n        }, this._showingDelay);\n\n    }\n\n    public hide() {\n\n        this._counter--;\n\n        if (this._counter > 0) {\n            return;\n        }\n\n        // If the spinner has not been rendered.\n        if (this._showingTimer) {\n            clearTimeout(this._showingTimer);\n            this._showingTimer = null;\n            return;\n        }\n\n        // If have scheduled to dismiss the spinner,\n        // we better we schedule again.\n        if (this._dismissingTimer) {\n            clearTimeout(this._dismissingTimer);\n            this._dismissingTimer = setTimeout(() => {\n                // Clean up the timer\n                this._dismissingTimer = null;\n\n                // Dismiss the dialog\n                if (this._diaglogRef) {\n                    this._diaglogRef.close();\n                    this._diaglogRef = null;\n                }\n            }, DismissingDelayPeroid);\n\n            return;\n        }\n\n        // Schedule to dismiss the spinner\n        if (this._diaglogRef) {\n            this._dismissingTimer = setTimeout(() => {\n\n                // Dismiss the dialog\n                if (this._diaglogRef) {\n                    this._diaglogRef.close();\n                    this._diaglogRef = null;\n                }\n            }, DismissingDelayPeroid);\n        }\n    }\n}\n\n","import { Component, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatCheckboxChange } from '@angular/material';\r\n\r\nimport { TagInputComponent } from 'ngx-chips';\r\n\r\nimport * as showdown from 'showdown';\r\n\r\nimport { replace } from '@polpware/fe-utilities';\r\n\r\nfunction isValidEmail(control) {\r\n    const value = control.value;\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    if (re.test(value)) {\r\n        return null;\r\n    }\r\n    return {\r\n        'isValidEmail': true\r\n    };\r\n}\r\n\r\nfunction display_name(text) {\r\n    /* Remove all quotes                                                                                                                                     \r\n       Remove whitespace, brackets, and commas from the ends. */\r\n    return text.replace(/(^[\\s,>]+)|\"|([\\s,<]+$)/g, '');\r\n}\r\n\r\nconst EmailPattern = /[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*/g;\r\n\r\nexport function parseEmails(addr_list) {\r\n    /* Regex source:                                                                                                                                         \r\n       https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address                                                                                \r\n    */\r\n    var emails = [], match, idx = 0;\r\n    while (match = EmailPattern.exec(addr_list)) {\r\n        var display;\r\n        if (display = display_name(addr_list.substring(idx, match['index']))) {\r\n            emails.push('\"' + display + '\" ' + '<' + match[0] + '>');\r\n        }\r\n        else {\r\n            emails.push(match[0]);\r\n        }\r\n        idx = match['index'] + match[0].length;\r\n    }\r\n    return emails;\r\n}\r\n\r\n// TODO: Improve \r\nexport function parseOnlyEmails(addr_list) {\r\n    var emails = [], match;\r\n    while (match = EmailPattern.exec(addr_list)) {\r\n        emails.push(match[0]);\r\n    }\r\n    return emails;\r\n}\r\n\r\nexport abstract class EmailFormAbstractComponent {\r\n\r\n    @ViewChild('emailInputBox') emailInputBox: TagInputComponent;\r\n    @ViewChild('emailBody') emailBody: ElementRef;\r\n\r\n    public title: string;\r\n\r\n    public messageBody: string;\r\n\r\n    public emails: Array<any>;\r\n    public validators = [isValidEmail];\r\n    public errorMessages = {\r\n        'isValidEmail': 'Please input a valid email'\r\n    };\r\n\r\n    private disableFocusEvent: boolean;\r\n\r\n    constructor(public dialogRef: MatDialogRef<EmailFormAbstractComponent>) {\r\n\r\n        this.title = 'Send out an email';\r\n        this.emails = [];\r\n        this.messageBody = '';\r\n\r\n        this.disableFocusEvent = false;\r\n    }\r\n\r\n    public get isSubmitDisabled(): boolean {\r\n        return this.emails.length === 0;\r\n    }\r\n\r\n    public abstract onSubmit();\r\n\r\n    public onOutOfTagInput(evt) {\r\n\r\n        if (this.disableFocusEvent) {\r\n            return;\r\n        }\r\n\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n\r\n        // A tempory hack for fixing the focus issue\r\n        // on invoking the onAddingRequested method ...\r\n        const emails = parseEmails(this.emailInputBox.formValue);\r\n\r\n        emails.forEach(v => {\r\n            this.emails.push(v);\r\n        });\r\n\r\n        this.emailInputBox.setInputValue('');\r\n\r\n        // Jump to other place\r\n        this.disableFocusEvent = true;\r\n        this.emailBody.nativeElement.focus();\r\n\r\n        this.disableFocusEvent = false;\r\n    }\r\n\r\n}\r\n","import { Component, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatCheckboxChange } from '@angular/material';\r\n\r\nimport * as showdown from 'showdown';\r\n\r\nimport { EmailFormAbstractComponent, parseOnlyEmails } from './email-form-abstract.component';\r\n\r\nexport interface IEmailFormDefaultInput {\r\n    emailBody: string;\r\n    emailTitle: string;\r\n}\r\n\r\nexport interface IEmailFormDefaultOutput {\r\n    confirmed: boolean;\r\n    emailReceivers: string[];\r\n    emailBody: string;\r\n    emailTitle: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'polp-md-email-form',\r\n    templateUrl: 'email-form.component.html'\r\n})\r\nexport class EmailFormComponent extends EmailFormAbstractComponent {\r\n\r\n    constructor(public dialogRef: MatDialogRef<EmailFormComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: IEmailFormDefaultInput) {\r\n        super(dialogRef);\r\n\r\n        this.messageBody = data.emailBody || '';\r\n    }\r\n\r\n    public get isSubmitDisabled(): boolean {\r\n        return this.emails.length === 0;\r\n    }\r\n\r\n    // Override\r\n    public onSubmit() {\r\n        // body\r\n        let messageBody = this.messageBody;\r\n\r\n        // Convert it into html\r\n        const converter = new showdown.Converter();\r\n        messageBody = converter.makeHtml(messageBody);\r\n\r\n        // Prepare email list\r\n        const emails = [];\r\n\r\n        this.emails.forEach(elem => {\r\n            let x = elem || (elem.value);\r\n            const y = parseOnlyEmails(x);\r\n            y.forEach(m => {\r\n                emails.push(m);\r\n            });\r\n        });\r\n\r\n        const outputs: IEmailFormDefaultOutput = {\r\n            confirmed: true,\r\n            emailReceivers: emails,\r\n            emailBody: messageBody,\r\n            emailTitle: this.data.emailTitle || '' // todo:\r\n        };\r\n\r\n        this.dialogRef.close(outputs);\r\n    }\r\n}\r\n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\n\nimport {\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n} from '@angular/material';\n\nimport {\n    ReactiveFormsModule,\n    FormsModule\n} from '@angular/forms';\n\nimport { TagInputModule } from 'ngx-chips';\n\nimport { PolpMdIndicatorModal } from './indicator/modal.component';\nimport { PolpMdSpinnerServiceImpl } from './services/spinner-service.impl';\n\nimport { EmailFormComponent } from './email-form/email-form.component';\n\n@NgModule({\n    declarations: [\n        PolpMdIndicatorModal,\n        EmailFormComponent\n    ],\n    imports: [\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatProgressSpinnerModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        TagInputModule\n    ],\n    exports: [\n        PolpMdIndicatorModal,\n        EmailFormComponent\n    ],\n    entryComponents: [\n        PolpMdIndicatorModal,\n        EmailFormComponent\n    ],\n    providers: [\n        PolpMdSpinnerServiceImpl\n    ]\n})\nexport class PolpMdComponentsModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: PolpMdComponentsModule\n        };\n    }\n\n    constructor(@Optional() @SkipSelf() parentModule: PolpMdComponentsModule) {\n        if (parentModule) {\n            throw new Error(\n                'PolpMdComponentsModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n"],"names":["IndicatorModal","showdown.Converter"],"mappings":"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"}
