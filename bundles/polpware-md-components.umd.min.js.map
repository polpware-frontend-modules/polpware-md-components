{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@polpware/md-components/lib/adaptors/cdk-collection-data-source-adaptor.ts","ng://@polpware/md-components/lib/indicator/modal.component.ts","ng://@polpware/md-components/lib/services/spinner-service.impl.ts","ng://@polpware/md-components/lib/email-form/email-form-abstract.component.ts","ng://@polpware/md-components/lib/email-form/email-form.component.ts","ng://@polpware/md-components/lib/radio-group-field/radio-group-field.component.ts","ng://@polpware/md-components/lib/upload-file/upload-file.component.ts","ng://@polpware/md-components/lib/md-components.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__extends","__","this","constructor","prototype","create","TableDataSourceAdaptor","_database","_this","_super","call","_filterChange","BehaviorSubject","tslib_1.__extends","defineProperty","value","filter","next","connect","dataChange","asObservable","disconnect","DataSource","PolpMdIndicatorModal","dialogRef","data","title","onNoClick","close","Component","args","selector","template","MatDialogRef","Inject","MAT_DIALOG_DATA","PolpMdSpinnerServiceImpl","_dialog","_showingTimer","_showingDelay","_dismissingTimer","_diaglogRef","_counter","setDelay","seconds","show","clearTimeout","setTimeout","open","IndicatorModal","width","hide","Injectable","MatDialog","isValidEmail","control","test","EmailPattern","parseEmails","addr_list","match","emails","idx","exec","display","substring","replace","push","length","parseOnlyEmails","EmailFormAbstractComponent","validators","errorMessages","messageBody","disableFocusEvent","onOutOfTagInput","evt","preventDefault","stopPropagation","emailInputBox","formValue","forEach","v","setInputValue","emailBody","nativeElement","focus","ViewChild","EmailFormComponent","onSubmit","showdown.Converter","makeHtml","elem","m","outputs","confirmed","emailReceivers","emailTitle","RadioGroupFieldControl","stateChanges","Subject","id","nextId","focused","errorState","controlType","describedBy","ngControl","radioGroup","_placeholder","plh","required","req","coerceBooleanProperty","disabled","dis","ngOnInit","ngOnDestroy","complete","setDescribedByIds","ids","join","onContainerClick","event","writeValue","undefined","registerOnChange","fn","registerOnTouched","providers","provide","MatFormFieldControl","useExisting","NG_VALUE_ACCESSOR","multi","forwardRef","MatRadioGroup","HostBinding","Input","UploadFileComponent","files","responses","accept","text","prelude","mode","progressMode","some","x","inProgress","startUpload","fileUpload","document","getElementById","onchange","message","validateInput","error","index","file","uuid","guid","state","progress","canRetry","canCancel","uploadFiles","click","cancelFile","sub","unsubscribe","removeFileFromArray","retryFile","uploadFile","postUploadFile","body","closeOnSunccess","uploadService","upload","uploadUrl","makeFormData","subscribe","eventType","HttpEventType","UploadProgress","percent","Response","indexOf","splice","PolpMdComponentsModule","parentModule","Error","forRoot","ngModule","NgModule","declarations","imports","CommonModule","FormsModule","ReactiveFormsModule","MatProgressSpinnerModule","MatDialogModule","MatButtonModule","MatIconModule","MatRadioModule","MatProgressBarModule","MatListModule","TagInputModule","exports","entryComponents","decorators","type","Optional","SkipSelf"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { DataSource } from '@angular/cdk/collections';\nimport { BehaviorSubject ,  Observable } from 'rxjs';\n\ninterface Database<T> {\n    dataChange: BehaviorSubject<Array<T>>\n}\n\nexport class TableDataSourceAdaptor<T> extends DataSource<T> {\n\n    protected readonly _filterChange: BehaviorSubject<string>;\n\n    constructor(protected readonly _database: Database<T>) {\n        super();\n        this._filterChange = new BehaviorSubject('');\n    }\n\n    get filter(): string { return this._filterChange.value; }\n    set filter(filter: string) { this._filterChange.next(filter); }\n\n    connect(): Observable<Array<T>> {\n        return this._database.dataChange.asObservable();\n    }\n\n    disconnect(): void {\n    }\n}\n\n","import { Component, Inject } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA } from '@angular/material';\r\n\r\n\r\n@Component({\r\n    selector: 'polp-md-indicator-modal',\r\n    templateUrl: 'modal.component.html'\r\n})\r\nexport class PolpMdIndicatorModal {\r\n\r\n    public title: string;\r\n\r\n    constructor(\r\n        public dialogRef: MatDialogRef<PolpMdIndicatorModal>,\r\n        @Inject(MAT_DIALOG_DATA) public data: any) {\r\n        this.title = data.title || '';\r\n    }\r\n\r\n    onNoClick(): void {\r\n        this.dialogRef.close();\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\nimport { MatDialog, MatDialogRef } from '@angular/material';\n\nimport {\n    ISpinnerService\n} from '@polpware/ngx-spinner';\n\nimport { PolpMdIndicatorModal as IndicatorModal } from '../indicator/modal.component';\n\nconst DismissingDelayPeroid = 300;\nconst DefaultShowingDelayPeroid = 500;\n\n@Injectable()\nexport class PolpMdSpinnerServiceImpl implements ISpinnerService {\n\n    private _diaglogRef: MatDialogRef<IndicatorModal>;\n\n    private _showingTimer: any;\n    private _showingDelay: number;\n    private _dismissingTimer: any;\n\n    private _counter: number;\n\n    constructor(private _dialog: MatDialog) {\n        this._showingTimer = null;\n        this._showingDelay = DefaultShowingDelayPeroid;\n        this._dismissingTimer = null;\n        this._diaglogRef = null;\n        this._counter = 0;\n    }\n\n    public setDelay(seconds: number) {\n        this._showingDelay = seconds * 1000;\n    }\n\n    // Override\n    public show(title: string = 'Loading ...') {\n\n        this._counter++;\n\n        // If there is one already, use it.\n        if (this._diaglogRef) {\n\n            // However, we need to cancel the dismiss timer.\n            // It is safe, because we expect that \"hide\" is to be called\n            // sometime later from this moment on.\n            if (this._dismissingTimer) {\n                clearTimeout(this._dismissingTimer);\n                this._dismissingTimer = 0;\n            }\n\n            return;\n        }\n\n        // If we have already scheduled to dismiss the spinner,\n        // we just need to clear the scheduler.\n        // Please refer to the above for the reason.\n        if (this._dismissingTimer) {\n            clearTimeout(this._dismissingTimer);\n            this._dismissingTimer = 0;\n            return;\n        }\n\n        // If we have already scheduled to show the spinner, we just\n        // use this schedule. \n        if (this._showingTimer) {\n            return;\n        }\n\n        // Otherwise, schdule to show the spinner.\n        this._showingTimer = setTimeout(() => {\n            // Clean up the timer\n            this._showingTimer = null;\n\n            this._diaglogRef = this._dialog.open(IndicatorModal, {\n                width: '250px',\n                data: {\n                    title: title\n                }\n            });\n\n        }, this._showingDelay);\n\n    }\n\n    public hide() {\n\n        this._counter--;\n\n        if (this._counter > 0) {\n            return;\n        }\n\n        // If the spinner has not been rendered.\n        if (this._showingTimer) {\n            clearTimeout(this._showingTimer);\n            this._showingTimer = null;\n            return;\n        }\n\n        // If have scheduled to dismiss the spinner,\n        // we better we schedule again.\n        if (this._dismissingTimer) {\n            clearTimeout(this._dismissingTimer);\n            this._dismissingTimer = setTimeout(() => {\n                // Clean up the timer\n                this._dismissingTimer = null;\n\n                // Dismiss the dialog\n                if (this._diaglogRef) {\n                    this._diaglogRef.close();\n                    this._diaglogRef = null;\n                }\n            }, DismissingDelayPeroid);\n\n            return;\n        }\n\n        // Schedule to dismiss the spinner\n        if (this._diaglogRef) {\n            this._dismissingTimer = setTimeout(() => {\n\n                // Dismiss the dialog\n                if (this._diaglogRef) {\n                    this._diaglogRef.close();\n                    this._diaglogRef = null;\n                }\n            }, DismissingDelayPeroid);\n        }\n    }\n}\n\n","import { Component, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatCheckboxChange } from '@angular/material';\r\n\r\nimport { TagInputComponent } from 'ngx-chips';\r\n\r\nimport * as showdown from 'showdown';\r\n\r\nimport { replace } from '@polpware/fe-utilities';\r\n\r\nfunction isValidEmail(control) {\r\n    const value = control.value;\r\n    const re = /\\S+@\\S+\\.\\S+/;\r\n    if (re.test(value)) {\r\n        return null;\r\n    }\r\n    return {\r\n        'isValidEmail': true\r\n    };\r\n}\r\n\r\nfunction display_name(text) {\r\n    /* Remove all quotes                                                                                                                                     \r\n       Remove whitespace, brackets, and commas from the ends. */\r\n    return text.replace(/(^[\\s,>]+)|\"|([\\s,<]+$)/g, '');\r\n}\r\n\r\nconst EmailPattern = /[a-zA-Z0-9.!#$%&'*+\\/=?^_`{|}~-]+@[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)*/g;\r\n\r\nexport function parseEmails(addr_list) {\r\n    /* Regex source:                                                                                                                                         \r\n       https://html.spec.whatwg.org/multipage/forms.html#valid-e-mail-address                                                                                \r\n    */\r\n    var emails = [], match, idx = 0;\r\n    while (match = EmailPattern.exec(addr_list)) {\r\n        var display;\r\n        if (display = display_name(addr_list.substring(idx, match['index']))) {\r\n            emails.push('\"' + display + '\" ' + '<' + match[0] + '>');\r\n        }\r\n        else {\r\n            emails.push(match[0]);\r\n        }\r\n        idx = match['index'] + match[0].length;\r\n    }\r\n    return emails;\r\n}\r\n\r\n// TODO: Improve \r\nexport function parseOnlyEmails(addr_list) {\r\n    var emails = [], match;\r\n    while (match = EmailPattern.exec(addr_list)) {\r\n        emails.push(match[0]);\r\n    }\r\n    return emails;\r\n}\r\n\r\nexport abstract class EmailFormAbstractComponent {\r\n\r\n    @ViewChild('emailInputBox') emailInputBox: TagInputComponent;\r\n    @ViewChild('emailBody') emailBody: ElementRef;\r\n\r\n    public title: string;\r\n\r\n    public messageBody: string;\r\n\r\n    public emails: Array<any>;\r\n    public validators = [isValidEmail];\r\n    public errorMessages = {\r\n        'isValidEmail': 'Please input a valid email'\r\n    };\r\n\r\n    private disableFocusEvent: boolean;\r\n\r\n    constructor(public dialogRef: MatDialogRef<EmailFormAbstractComponent>) {\r\n\r\n        this.title = 'Send out an email';\r\n        this.emails = [];\r\n        this.messageBody = '';\r\n\r\n        this.disableFocusEvent = false;\r\n    }\r\n\r\n    public get isSubmitDisabled(): boolean {\r\n        return this.emails.length === 0;\r\n    }\r\n\r\n    public abstract onSubmit();\r\n\r\n    public onOutOfTagInput(evt) {\r\n\r\n        if (this.disableFocusEvent) {\r\n            return;\r\n        }\r\n\r\n        evt.preventDefault();\r\n        evt.stopPropagation();\r\n\r\n        // A tempory hack for fixing the focus issue\r\n        // on invoking the onAddingRequested method ...\r\n        const emails = parseEmails(this.emailInputBox.formValue);\r\n\r\n        emails.forEach(v => {\r\n            this.emails.push(v);\r\n        });\r\n\r\n        this.emailInputBox.setInputValue('');\r\n\r\n        // Jump to other place\r\n        this.disableFocusEvent = true;\r\n        this.emailBody.nativeElement.focus();\r\n\r\n        this.disableFocusEvent = false;\r\n    }\r\n\r\n}\r\n","import { Component, Inject, ViewChild, ElementRef } from '@angular/core';\r\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatCheckboxChange } from '@angular/material';\r\n\r\nimport * as showdown from 'showdown';\r\n\r\nimport { EmailFormAbstractComponent, parseOnlyEmails } from './email-form-abstract.component';\r\n\r\nexport interface IEmailFormDefaultInput {\r\n    emailBody: string;\r\n    emailTitle: string;\r\n}\r\n\r\nexport interface IEmailFormDefaultOutput {\r\n    confirmed: boolean;\r\n    emailReceivers: string[];\r\n    emailBody: string;\r\n    emailTitle: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'polp-md-email-form',\r\n    templateUrl: 'email-form.component.html'\r\n})\r\nexport class EmailFormComponent extends EmailFormAbstractComponent {\r\n\r\n    constructor(public dialogRef: MatDialogRef<EmailFormComponent>,\r\n        @Inject(MAT_DIALOG_DATA) public data: IEmailFormDefaultInput) {\r\n        super(dialogRef);\r\n\r\n        this.messageBody = data.emailBody || '';\r\n    }\r\n\r\n    public get isSubmitDisabled(): boolean {\r\n        return this.emails.length === 0;\r\n    }\r\n\r\n    // Override\r\n    public onSubmit() {\r\n        // body\r\n        let messageBody = this.messageBody;\r\n\r\n        // Convert it into html\r\n        const converter = new showdown.Converter();\r\n        messageBody = converter.makeHtml(messageBody);\r\n\r\n        // Prepare email list\r\n        const emails = [];\r\n\r\n        this.emails.forEach(elem => {\r\n            let x = elem || (elem.value);\r\n            const y = parseOnlyEmails(x);\r\n            y.forEach(m => {\r\n                emails.push(m);\r\n            });\r\n        });\r\n\r\n        const outputs: IEmailFormDefaultOutput = {\r\n            confirmed: true,\r\n            emailReceivers: emails,\r\n            emailBody: messageBody,\r\n            emailTitle: this.data.emailTitle || '' // todo:\r\n        };\r\n\r\n        this.dialogRef.close(outputs);\r\n    }\r\n}\r\n","import {\n    HostBinding, Input, Optional, Self, Component,\n    OnInit, ViewChild, OnDestroy, forwardRef\n} from '@angular/core';\n\nimport { NgControl, ControlValueAccessor, NG_VALUE_ACCESSOR } from '@angular/forms';\n\nimport { MatFormFieldControl, MatRadioGroup } from \"@angular/material\";\n\nimport { Subject } from 'rxjs';\n\nimport { coerceBooleanProperty } from '@angular/cdk/coercion';\n\n@Component({\n    selector: 'polp-radio-group-field',\n    templateUrl: 'radio-group-field.component.html',\n    styleUrls: ['./radio-group-field.component.scss'],\n    providers: [\n        {\n            provide: MatFormFieldControl,\n            useExisting: RadioGroupFieldControl\n        },\n        {\n            provide: NG_VALUE_ACCESSOR,\n            multi: true,\n            useExisting: forwardRef(() => RadioGroupFieldControl)\n        }\n    ],\n})\nexport class RadioGroupFieldControl implements MatFormFieldControl<any>, OnInit, OnDestroy, ControlValueAccessor {\n\n    // View child\n    @ViewChild(MatRadioGroup) radioGroup: MatRadioGroup;\n\n    // Value\n    stateChanges = new Subject<void>();\n\n    // Unique id\n    static nextId = 0;\n    @HostBinding() id = `radio-group-field-control-${RadioGroupFieldControl.nextId++}`;\n\n    // Focused \n    focused = false;\n\n    // Error state\n    errorState = false;\n\n    // control type\n    controlType = 'radio-group-field';\n\n    // Described \n    @HostBinding('attr.aria-describedby') describedBy = '';\n\n    // Specific to radio buttons\n    @Input() radioOptions: Array<{\n        value: any;\n        text: string;\n    }>;\n\n    ngControl: NgControl = null;\n\n    constructor() { }\n\n    // Value\n    @Input()\n    get value(): any {\n        return this.radioGroup.value;\n    }\n    set value(v: any) {\n        this.radioGroup.value = v;\n        this.stateChanges.next();\n    }\n\n    // Place holder\n    @Input()\n    get placeholder() {\n        return this._placeholder;\n    }\n    set placeholder(plh) {\n        this._placeholder = plh;\n        this.stateChanges.next();\n    }\n    private _placeholder: string;\n\n    // Never be empty\n    get empty() {\n        return false;\n    }\n\n    // should floating \n    @HostBinding('class.floating')\n    get shouldLabelFloat() {\n        return true;\n    }\n\n    // required \n    @Input()\n    get required() {\n        return this.radioGroup.required;\n    }\n    set required(req) {\n        // todo:\n        this.radioGroup.required = coerceBooleanProperty(req);\n        this.stateChanges.next();\n    }\n\n    @Input()\n    get disabled() {\n        return this.radioGroup.disabled;\n    }\n    set disabled(dis) {\n        this.radioGroup.disabled = coerceBooleanProperty(dis);\n        this.stateChanges.next();\n    }\n\n    ngOnInit() {\n    }\n\n    // Override \n    ngOnDestroy() {\n        this.stateChanges.complete();\n    }\n\n    // set described by ids\n    setDescribedByIds(ids: string[]) {\n        this.describedBy = ids.join(' ');\n    }\n\n    // onContainerClick(event: MouseEvent)\n    onContainerClick(event: MouseEvent) {\n        // todo:\n    }\n\n    // Control value accessor\n    writeValue(value: any) {\n        if (value !== undefined) {\n            this.radioGroup.writeValue(value);\n        }\n    }\n\n    // todo: When will this be invoked???\n    registerOnChange(fn) {\n        this.radioGroup.registerOnChange(fn);\n    }\n\n    registerOnTouched(fn) {\n        this.radioGroup.registerOnTouched(fn);\n    }\n\n}\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatCheckboxChange } from '@angular/material';\n\nimport { HttpEventType } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\nimport { guid } from '@polpware/fe-utilities';\n\nimport { IUploadFileService } from './upload-file.interface';\n\nexport interface IUploadFileInput {\n    title: string;\n    prelude: string;\n    uploadService: IUploadFileService;\n    uploadUrl: string;\n    /** File extension that accepted, same as 'accept' of <input type=\"file\" />. \n             By the default, it's set to 'image/*'.\n    */\n    accept: string;\n    progressMode: 'determinate' | 'indeterminate';\n    makeFormData: (file: File) => FormData;\n    validateInput: (files: FileList) => string;\n    closeOnSunccess: boolean;\n}\n\nclass FileUploadModel {\n    uuid: string;\n    data: File;\n    state: string;\n    inProgress: boolean;\n    progress: number;\n    canRetry: boolean;\n    canCancel: boolean;\n    message: string;\n    sub?: Subscription;\n}\n\n@Component({\n    selector: 'plop-upload-file',\n    templateUrl: './upload-file.component.html',\n    styleUrls: ['./upload-file.component.scss']\n})\nexport class UploadFileComponent implements OnInit {\n\n    title: string;\n    text: string;\n    accept: string;\n    mode: string;\n    error: string;\n\n    files: Array<FileUploadModel> = [];\n    private responses: Array<any> = [];\n\n    constructor(public readonly dialogRef: MatDialogRef<UploadFileComponent>,\n        @Inject(MAT_DIALOG_DATA) public readonly data: IUploadFileInput) {\n\n        this.title = this.data.title || '';\n        this.accept = this.data.accept || '*/';\n        this.text = this.data.prelude || '';\n        this.mode = this.data.progressMode || 'indeterminate';\n    }\n\n    public get isCloseDisabled(): boolean {\n        return this.files.some(x => x.inProgress);\n    }\n\n    close() {\n        this.dialogRef.close(this.responses);\n    }\n\n    ngOnInit() {\n    }\n\n    startUpload() {\n        const fileUpload = document.getElementById('polpFileUpload') as HTMLInputElement;\n        fileUpload.onchange = () => {\n            // Validate inputs\n            const message = this.data.validateInput(fileUpload.files);\n            if (message) {\n                this.error = message;\n                return;\n            }\n\n            for (let index = 0; index < fileUpload.files.length; index++) {\n                const file = fileUpload.files[index];\n                this.files.push({\n                    uuid: guid(),\n                    data: file,\n                    state: 'in',\n                    inProgress: false,\n                    progress: 0,\n                    canRetry: false,\n                    canCancel: true,\n                    message: ''\n                });\n            }\n            this.uploadFiles();\n        };\n        fileUpload.click();\n    }\n\n    cancelFile(file: FileUploadModel) {\n        file.sub.unsubscribe();\n        this.removeFileFromArray(file);\n    }\n\n    retryFile(file: FileUploadModel) {\n        this.uploadFile(file);\n        file.canRetry = false;\n    }\n\n    private postUploadFile(file: FileUploadModel, body: any) {\n        this.responses.push({\n            uuid: file.uuid,\n            body: body\n        });\n\n        // If this is the last one file which has been uploaded\n        if (this.data.closeOnSunccess) {\n            if (this.files.length === this.responses.length) {\n                // Schedule to close\n                setTimeout(() => {\n                    this.close();\n                });\n            }\n        }\n    }\n\n    private uploadFile(file: FileUploadModel) {\n        file.inProgress = true;\n        file.sub = this.data.uploadService.upload(file.data,\n            this.data.uploadUrl, this.data.makeFormData)\n            .subscribe((value) => {\n                switch (value.eventType) {\n                    case HttpEventType.UploadProgress:\n                        file.progress = value.percent;\n                        break;\n                    case HttpEventType.Response:\n                        file.message = 'Upload Ok.';\n                        file.inProgress = false;\n                        file.canCancel = false;\n                        file.canRetry = false;\n\n                        this.postUploadFile(file, value.body);\n                        break;\n                }\n\n            }, (error) => {\n                file.inProgress = false;\n                file.canRetry = true;\n                file.message = `upload failure.`;\n            });\n    }\n\n    private uploadFiles() {\n        const fileUpload = document.getElementById('polpFileUpload') as HTMLInputElement;\n        fileUpload.value = '';\n\n        this.files.forEach(file => {\n            this.uploadFile(file);\n        });\n    }\n\n    private removeFileFromArray(file: FileUploadModel) {\n        const index = this.files.indexOf(file);\n        if (index > -1) {\n            this.files.splice(index, 1);\n        }\n    }\n\n}    \n","import {\n    ModuleWithProviders, NgModule,\n    Optional, SkipSelf\n} from '@angular/core';\n\nimport { CommonModule } from '@angular/common';\n\nimport {\n    MatProgressSpinnerModule,\n    MatDialogModule,\n    MatButtonModule,\n    MatIconModule,\n    MatRadioModule,\n    MatProgressBarModule,\n    MatListModule\n} from '@angular/material';\n\nimport {\n    ReactiveFormsModule,\n    FormsModule\n} from '@angular/forms';\n\nimport { TagInputModule } from 'ngx-chips';\n\nimport { PolpMdIndicatorModal } from './indicator/modal.component';\nimport { PolpMdSpinnerServiceImpl } from './services/spinner-service.impl';\n\nimport { EmailFormComponent } from './email-form/email-form.component';\n\nimport { RadioGroupFieldControl } from './radio-group-field/radio-group-field.component';\n\nimport { UploadFileComponent } from './upload-file/upload-file.component';\n\n@NgModule({\n    declarations: [\n        PolpMdIndicatorModal,\n        EmailFormComponent,\n        RadioGroupFieldControl,\n        UploadFileComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatProgressSpinnerModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatIconModule,\n        MatRadioModule,\n        MatProgressBarModule,\n        MatListModule,\n\n        TagInputModule\n    ],\n    exports: [\n        PolpMdIndicatorModal,\n        EmailFormComponent,\n        RadioGroupFieldControl,\n        UploadFileComponent\n    ],\n    entryComponents: [\n        PolpMdIndicatorModal,\n        EmailFormComponent,\n        UploadFileComponent\n    ],\n    providers: [\n        PolpMdSpinnerServiceImpl\n    ]\n})\nexport class PolpMdComponentsModule {\n    static forRoot(): ModuleWithProviders {\n        return {\n            ngModule: PolpMdComponentsModule\n        };\n    }\n\n    constructor(@Optional() @SkipSelf() parentModule: PolpMdComponentsModule) {\n        if (parentModule) {\n            throw new Error(\n                'PolpMdComponentsModule is already loaded. Import it in the AppModule only');\n        }\n    }\n}\n"]}